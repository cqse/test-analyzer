INSERT INTO Pit_Mutation_Result_Import (execution, mutatedMethod, mutationStatus, killingTestcase, mutatorName, mutationDescription) VALUES ('TEST', 'de.tum.in.ma.simpleproject.core.Calculation.<init>(int)', 'KILLED', 'de.tum.in.ma.simpleproject.core.CalculationStringTests.parse()', 'org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator', 'removed call to de/tum/in/ma/simpleproject/core/Calculation::setResult');
INSERT INTO Pit_Mutation_Result_Import (execution, mutatedMethod, mutationStatus, killingTestcase, mutatorName, mutationDescription) VALUES ('TEST', 'de.tum.in.ma.simpleproject.core.Calculation.clear()', 'KILLED', 'de.tum.in.ma.simpleproject.core.CalculationDefaultTests.clear()', 'org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator', 'removed call to de/tum/in/ma/simpleproject/core/Calculation::setResult');
INSERT INTO Pit_Mutation_Result_Import (execution, mutatedMethod, mutationStatus, killingTestcase, mutatorName, mutationDescription) VALUES ('TEST', 'de.tum.in.ma.simpleproject.core.Calculation.getComparable()', 'KILLED', 'de.tum.in.ma.simpleproject.core.CalculationDefaultTests.comparable()', 'org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator', 'mutated return of Object value for de/tum/in/ma/simpleproject/core/Calculation::getComparable to ( if (x != null) null else throw new RuntimeException )');
INSERT INTO Pit_Mutation_Result_Import (execution, mutatedMethod, mutationStatus, killingTestcase, mutatorName, mutationDescription) VALUES ('TEST', 'de.tum.in.ma.simpleproject.core.Calculation.getResultAsArray()', 'KILLED', 'de.tum.in.ma.simpleproject.core.CalculationDefaultTests.intArray()', 'org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator', 'mutated return of Object value for de/tum/in/ma/simpleproject/core/Calculation::getResultAsArray to ( if (x != null) null else throw new RuntimeException )');
INSERT INTO Pit_Mutation_Result_Import (execution, mutatedMethod, mutationStatus, killingTestcase, mutatorName, mutationDescription) VALUES ('TEST', 'de.tum.in.ma.simpleproject.core.Calculation.getResultAsList()', 'KILLED', 'de.tum.in.ma.simpleproject.core.CalculationDefaultTests.resultAsList()', 'org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator', 'mutated return of Object value for de/tum/in/ma/simpleproject/core/Calculation::getResultAsList to ( if (x != null) null else throw new RuntimeException )');
INSERT INTO Pit_Mutation_Result_Import (execution, mutatedMethod, mutationStatus, killingTestcase, mutatorName, mutationDescription) VALUES ('TEST', 'de.tum.in.ma.simpleproject.core.Calculation.isPositive()', 'KILLED', 'de.tum.in.ma.simpleproject.core.CalculationDefaultTests.positive()', 'org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator', 'replaced return of integer sized value with (x == 0 ? 1 : 0)');
INSERT INTO Pit_Mutation_Result_Import (execution, mutatedMethod, mutationStatus, killingTestcase, mutatorName, mutationDescription) VALUES ('TEST', 'de.tum.in.ma.simpleproject.core.Calculation.isPositive(int)', 'KILLED', 'de.tum.in.ma.simpleproject.core.CalculationDefaultTests.positive()', 'org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator', 'changed conditional boundary');
INSERT INTO Pit_Mutation_Result_Import (execution, mutatedMethod, mutationStatus, killingTestcase, mutatorName, mutationDescription) VALUES ('TEST', 'de.tum.in.ma.simpleproject.core.Calculation.isPositive(int)', 'KILLED', 'de.tum.in.ma.simpleproject.core.CalculationDefaultTests.mult1()', 'org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator', 'negated conditional');
INSERT INTO Pit_Mutation_Result_Import (execution, mutatedMethod, mutationStatus, killingTestcase, mutatorName, mutationDescription) VALUES ('TEST', 'de.tum.in.ma.simpleproject.core.Calculation.isPositive(int)', 'KILLED', 'de.tum.in.ma.simpleproject.core.CalculationDefaultTests.mult1()', 'org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator', 'replaced return of integer sized value with (x == 0 ? 1 : 0)');
INSERT INTO Pit_Mutation_Result_Import (execution, mutatedMethod, mutationStatus, killingTestcase, mutatorName, mutationDescription) VALUES ('TEST', 'de.tum.in.ma.simpleproject.core.Calculation.isPositive(int)', 'KILLED', 'de.tum.in.ma.simpleproject.core.CalculationDefaultTests.mult3()', 'org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator', 'replaced return of integer sized value with (x == 0 ? 1 : 0)');
INSERT INTO Pit_Mutation_Result_Import (execution, mutatedMethod, mutationStatus, killingTestcase, mutatorName, mutationDescription) VALUES ('TEST', 'de.tum.in.ma.simpleproject.core.Calculation.mult(int)', 'KILLED', 'de.tum.in.ma.simpleproject.core.CalculationDefaultTests.mult1()', 'org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator', 'changed conditional boundary');
INSERT INTO Pit_Mutation_Result_Import (execution, mutatedMethod, mutationStatus, killingTestcase, mutatorName, mutationDescription) VALUES ('TEST', 'de.tum.in.ma.simpleproject.core.Calculation.mult(int)', 'KILLED', 'de.tum.in.ma.simpleproject.core.CalculationDefaultTests.mult1()', 'org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator', 'Changed increment from 1 to -1');
INSERT INTO Pit_Mutation_Result_Import (execution, mutatedMethod, mutationStatus, killingTestcase, mutatorName, mutationDescription) VALUES ('TEST', 'de.tum.in.ma.simpleproject.core.Calculation.mult(int)', 'KILLED', 'de.tum.in.ma.simpleproject.core.CalculationDefaultTests.mult3()', 'org.pitest.mutationtest.engine.gregor.mutators.InvertNegsMutator', 'removed negation');
INSERT INTO Pit_Mutation_Result_Import (execution, mutatedMethod, mutationStatus, killingTestcase, mutatorName, mutationDescription) VALUES ('TEST', 'de.tum.in.ma.simpleproject.core.Calculation.mult(int)', 'KILLED', 'de.tum.in.ma.simpleproject.core.CalculationDefaultTests.mult3()', 'org.pitest.mutationtest.engine.gregor.mutators.InvertNegsMutator', 'removed negation');
INSERT INTO Pit_Mutation_Result_Import (execution, mutatedMethod, mutationStatus, killingTestcase, mutatorName, mutationDescription) VALUES ('TEST', 'de.tum.in.ma.simpleproject.core.Calculation.mult(int)', 'KILLED', 'de.tum.in.ma.simpleproject.core.CalculationDefaultTests.mult1()', 'org.pitest.mutationtest.engine.gregor.mutators.MathMutator', 'Replaced integer addition with subtraction');
INSERT INTO Pit_Mutation_Result_Import (execution, mutatedMethod, mutationStatus, killingTestcase, mutatorName, mutationDescription) VALUES ('TEST', 'de.tum.in.ma.simpleproject.core.Calculation.mult(int)', 'KILLED', 'de.tum.in.ma.simpleproject.core.CalculationDefaultTests.mult1()', 'org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator', 'negated conditional');
INSERT INTO Pit_Mutation_Result_Import (execution, mutatedMethod, mutationStatus, killingTestcase, mutatorName, mutationDescription) VALUES ('TEST', 'de.tum.in.ma.simpleproject.core.Calculation.mult(int)', 'KILLED', 'de.tum.in.ma.simpleproject.core.CalculationDefaultTests.mult1()', 'org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator', 'negated conditional');
INSERT INTO Pit_Mutation_Result_Import (execution, mutatedMethod, mutationStatus, killingTestcase, mutatorName, mutationDescription) VALUES ('TEST', 'de.tum.in.ma.simpleproject.core.Calculation.mult(int)', 'KILLED', 'de.tum.in.ma.simpleproject.core.CalculationDefaultTests.mult1()', 'org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator', 'negated conditional');
INSERT INTO Pit_Mutation_Result_Import (execution, mutatedMethod, mutationStatus, killingTestcase, mutatorName, mutationDescription) VALUES ('TEST', 'de.tum.in.ma.simpleproject.core.Calculation.mult(int)', 'KILLED', 'de.tum.in.ma.simpleproject.core.CalculationDefaultTests.mult2()', 'org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator', 'removed call to de/tum/in/ma/simpleproject/core/Calculation::setResult');
INSERT INTO Pit_Mutation_Result_Import (execution, mutatedMethod, mutationStatus, killingTestcase, mutatorName, mutationDescription) VALUES ('TEST', 'de.tum.in.ma.simpleproject.core.Calculation.mult(int)', 'KILLED', 'de.tum.in.ma.simpleproject.core.CalculationDefaultTests.mult3()', 'org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator', 'removed call to de/tum/in/ma/simpleproject/core/Calculation::mult');
INSERT INTO Pit_Mutation_Result_Import (execution, mutatedMethod, mutationStatus, killingTestcase, mutatorName, mutationDescription) VALUES ('TEST', 'de.tum.in.ma.simpleproject.core.Calculation.mult(int)', 'KILLED', 'de.tum.in.ma.simpleproject.core.CalculationDefaultTests.mult3()', 'org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator', 'removed call to de/tum/in/ma/simpleproject/core/Calculation::setResult');
INSERT INTO Pit_Mutation_Result_Import (execution, mutatedMethod, mutationStatus, killingTestcase, mutatorName, mutationDescription) VALUES ('TEST', 'de.tum.in.ma.simpleproject.core.Calculation.mult(int)', 'KILLED', 'de.tum.in.ma.simpleproject.core.CalculationDefaultTests.mult1()', 'org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator', 'removed call to de/tum/in/ma/simpleproject/core/Calculation::setResult');
INSERT INTO Pit_Mutation_Result_Import (execution, mutatedMethod, mutationStatus, killingTestcase, mutatorName, mutationDescription) VALUES ('TEST', 'de.tum.in.ma.simpleproject.core.Calculation.parse(java.lang.String)', 'KILLED', 'de.tum.in.ma.simpleproject.core.CalculationStringTests.parse()', 'org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator', 'mutated return of Object value for de/tum/in/ma/simpleproject/core/Calculation::parse to ( if (x != null) null else throw new RuntimeException )');
INSERT INTO Pit_Mutation_Result_Import (execution, mutatedMethod, mutationStatus, killingTestcase, mutatorName, mutationDescription) VALUES ('TEST', 'de.tum.in.ma.simpleproject.core.Calculation.sub(int)', 'KILLED', 'de.tum.in.ma.simpleproject.core.CalculationDefaultTests.sub()', 'org.pitest.mutationtest.engine.gregor.mutators.InvertNegsMutator', 'removed negation');
INSERT INTO Pit_Mutation_Result_Import (execution, mutatedMethod, mutationStatus, killingTestcase, mutatorName, mutationDescription) VALUES ('TEST', 'de.tum.in.ma.simpleproject.core.Calculation.sub(int)', 'KILLED', 'de.tum.in.ma.simpleproject.core.CalculationDefaultTests.sub()', 'org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator', 'removed call to de/tum/in/ma/simpleproject/core/Calculation::add');
INSERT INTO Pit_Mutation_Result_Import (execution, mutatedMethod, mutationStatus, killingTestcase, mutatorName, mutationDescription) VALUES ('TEST', 'de.tum.in.ma.simpleproject.core.Calculation.trimString(java.lang.String)', 'KILLED', 'de.tum.in.ma.simpleproject.core.CalculationStringTests.parse()', 'org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator', 'mutated return of Object value for de/tum/in/ma/simpleproject/core/Calculation::trimString to ( if (x != null) null else throw new RuntimeException )');
INSERT INTO Pit_Mutation_Result_Import (execution, mutatedMethod, mutationStatus, killingTestcase, mutatorName, mutationDescription) VALUES ('TEST', 'de.tum.in.ma.simpleproject.core.Calculation$1.compareTo(de.tum.in.ma.simpleproject.core.Calculation)', 'KILLED', 'de.tum.in.ma.simpleproject.core.CalculationDefaultTests.comparable()', 'org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator', 'replaced return of integer sized value with (x == 0 ? 1 : 0)');
