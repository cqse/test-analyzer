INSERT INTO Test_Result (execution, testcase, method, retValGen, killed, assertErr, exception) VALUES ('TEST', 'de.tum.in.ma.simpleproject.special.SetUpAndTearDownTests.testBeforeAndAfterDontInstrument()', 'de.tum.in.ma.simpleproject.special.SpecialTest2Object.callTest()', 'de.tum.in.niedermr.ta.core.analysis.mutation.returnvalues.SimpleReturnValueGeneratorWith0', true, true, 'java.lang.AssertionError');
INSERT INTO Test_Result (execution, testcase, method, retValGen, killed, assertErr, exception) VALUES ('TEST', 'de.tum.in.ma.simpleproject.special.SetUpAndTearDownTests.testBeforeAndAfterDontInstrument()', 'de.tum.in.ma.simpleproject.special.SpecialTest2Object.callTest()', 'de.tum.in.niedermr.ta.core.analysis.mutation.returnvalues.SimpleReturnValueGeneratorWith1', true, true, 'java.lang.AssertionError');
INSERT INTO Test_Result (execution, testcase, method, retValGen, killed, assertErr, exception) VALUES ('TEST', 'de.tum.in.ma.simpleproject.special.MiscellaneousTests.testSyntheticBride()', 'de.tum.in.ma.simpleproject.special.Special.compareTo(java.lang.Integer)', 'de.tum.in.niedermr.ta.core.analysis.mutation.returnvalues.SimpleReturnValueGeneratorWith0', true, true, 'java.lang.AssertionError');
INSERT INTO Test_Result (execution, testcase, method, retValGen, killed, assertErr, exception) VALUES ('TEST', 'de.tum.in.ma.simpleproject.special.MiscellaneousTests.testSyntheticBride()', 'de.tum.in.ma.simpleproject.special.Special.compareTo(java.lang.Integer)', 'de.tum.in.niedermr.ta.core.analysis.mutation.returnvalues.SimpleReturnValueGeneratorWith1', true, true, 'java.lang.AssertionError');
INSERT INTO Test_Result (execution, testcase, method, retValGen, killed, assertErr, exception) VALUES ('TEST', 'de.tum.in.ma.simpleproject.special.MiscellaneousTests.testWithTryCatchBlock()', 'de.tum.in.ma.simpleproject.special.Special.noReturnStatement()', 'de.tum.in.niedermr.ta.core.analysis.mutation.returnvalues.SimpleReturnValueGeneratorWith0', false, false, '');
INSERT INTO Test_Result (execution, testcase, method, retValGen, killed, assertErr, exception) VALUES ('TEST', 'de.tum.in.ma.simpleproject.special.MiscellaneousTests.testNoReturnStatement()', 'de.tum.in.ma.simpleproject.special.Special.noReturnStatement()', 'de.tum.in.niedermr.ta.core.analysis.mutation.returnvalues.SimpleReturnValueGeneratorWith0', true, true, 'java.lang.AssertionError');
INSERT INTO Test_Result (execution, testcase, method, retValGen, killed, assertErr, exception) VALUES ('TEST', 'de.tum.in.ma.simpleproject.special.MiscellaneousTests.testWithTryCatchBlock()', 'de.tum.in.ma.simpleproject.special.Special.noReturnStatement()', 'de.tum.in.niedermr.ta.core.analysis.mutation.returnvalues.SimpleReturnValueGeneratorWith1', false, false, '');
INSERT INTO Test_Result (execution, testcase, method, retValGen, killed, assertErr, exception) VALUES ('TEST', 'de.tum.in.ma.simpleproject.special.MiscellaneousTests.testNoReturnStatement()', 'de.tum.in.ma.simpleproject.special.Special.noReturnStatement()', 'de.tum.in.niedermr.ta.core.analysis.mutation.returnvalues.SimpleReturnValueGeneratorWith1', true, true, 'java.lang.AssertionError');
INSERT INTO Test_Result (execution, testcase, method, retValGen, killed, assertErr, exception) VALUES ('TEST', 'de.tum.in.ma.simpleproject.special.HierarchyTestsInherited.testInInheritingClass()', 'de.tum.in.ma.simpleproject.special.Special.add(int,int,int)', 'de.tum.in.niedermr.ta.core.analysis.mutation.returnvalues.SimpleReturnValueGeneratorWith0', true, true, 'java.lang.AssertionError');
INSERT INTO Test_Result (execution, testcase, method, retValGen, killed, assertErr, exception) VALUES ('TEST', 'de.tum.in.ma.simpleproject.special.HierarchyTestsInherited.testInAbstractClass()', 'de.tum.in.ma.simpleproject.special.Special.add(int,int,int)', 'de.tum.in.niedermr.ta.core.analysis.mutation.returnvalues.SimpleReturnValueGeneratorWith0', false, false, '');
INSERT INTO Test_Result (execution, testcase, method, retValGen, killed, assertErr, exception) VALUES ('TEST', 'de.tum.in.ma.simpleproject.special.HierarchyTestsInherited.testInInheritingClass()', 'de.tum.in.ma.simpleproject.special.Special.add(int,int,int)', 'de.tum.in.niedermr.ta.core.analysis.mutation.returnvalues.SimpleReturnValueGeneratorWith1', true, true, 'java.lang.AssertionError');
INSERT INTO Test_Result (execution, testcase, method, retValGen, killed, assertErr, exception) VALUES ('TEST', 'de.tum.in.ma.simpleproject.special.HierarchyTestsInherited.testInAbstractClass()', 'de.tum.in.ma.simpleproject.special.Special.add(int,int,int)', 'de.tum.in.niedermr.ta.core.analysis.mutation.returnvalues.SimpleReturnValueGeneratorWith1', true, true, 'java.lang.AssertionError');
INSERT INTO Test_Result (execution, testcase, method, retValGen, killed, assertErr, exception) VALUES ('TEST', 'de.tum.in.ma.simpleproject.special.MiscellaneousTests.testTryCatchBlock()', 'de.tum.in.ma.simpleproject.special.Special.tryCatchBlock(java.lang.String)', 'de.tum.in.niedermr.ta.core.analysis.mutation.returnvalues.SimpleReturnValueGeneratorWith0', true, true, 'java.lang.AssertionError');
INSERT INTO Test_Result (execution, testcase, method, retValGen, killed, assertErr, exception) VALUES ('TEST', 'de.tum.in.ma.simpleproject.special.MiscellaneousTests.testTryCatchBlock()', 'de.tum.in.ma.simpleproject.special.Special.tryCatchBlock(java.lang.String)', 'de.tum.in.niedermr.ta.core.analysis.mutation.returnvalues.SimpleReturnValueGeneratorWith1', true, true, 'java.lang.AssertionError');
